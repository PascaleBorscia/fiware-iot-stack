{
	"id": "a98f0a97-0588-935a-ee31-e7970e6926d5",
	"name": "Fiware EMTECH Hackathon",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "4b32166b-f8aa-5b36-399d-c88e10dde423",
			"name": "CEP API (Cepheus)",
			"description": "",
			"order": [
				"9a90e11e-1969-df0d-6c93-1687b5e1b2e0",
				"274ba7fd-6785-075d-b471-7094093c7ec1",
				"8e93b5ed-210f-807f-f9aa-e665e2152268",
				"a146b1c3-e028-7217-8d8d-7ff939ef61e7",
				"6a931d40-2ed2-9248-97d1-8a0cc2ec6f62"
			],
			"owner": "211018",
			"collectionId": "1b6af9a6-b0de-f812-b464-1f37a5435d60"
		},
		{
			"id": "9dad4d19-221f-3888-83d3-663719e620f3",
			"name": "Data API (Orion Context Broker)",
			"description": "",
			"order": [
				"7a4e1a88-b816-24c0-7d25-ee02f349c0d8",
				"721e7f2a-3f71-4b8a-42c0-4348ab4dbb98",
				"2fbeacb2-ed9e-7d66-0733-2c6a13875a3a",
				"f17dfc64-0d67-31b2-0a2c-749492645f0a",
				"942ba2b5-9089-bda1-a8f1-b1b921f89975",
				"4dc99761-a714-6c3d-5e2d-e31d9e5efedf",
				"f1abbb25-ca62-f598-4efd-6247ba3dcf3f",
				"2d549804-7630-1272-3980-ba1335fb070b",
				"5a70afbc-03a9-f8f7-8523-0b8849110e7a",
				"4a6e3a44-b5b2-ce83-c046-fae45addbdfc"
			],
			"owner": "211018",
			"collectionId": "6e42a4aa-5b61-f6fb-dafd-8aa8c06f2fd7"
		},
		{
			"id": "a18a2e5c-3ff9-9fbf-efab-e96c1657a39a",
			"name": "Device API (IoT Agent)",
			"description": "",
			"order": [
				"ba9230e1-ba02-864e-3cb0-589351dc6ce6",
				"a64b0f0c-ece8-3fd3-5fd7-09f145ec9624",
				"c5594033-be35-4a6f-8a06-070e01fd0aa7",
				"d205d75b-a4e1-99ed-1f32-3dd5d81b4e9c"
			],
			"owner": "211018",
			"collectionId": "41385a1f-4543-2d95-6714-cf2268f7dd1e"
		},
		{
			"id": "6e51b9d0-d5b9-9e9c-09d4-5cbbfd0ea986",
			"name": "Historical Data (Comet STH)",
			"description": "",
			"order": [
				"4e30fabf-0d94-9294-7754-666b64cec0b1",
				"26c45d27-bb6c-2a08-7300-7590038374a2",
				"3f78386f-ab28-8ab6-8d4a-17f57025547d",
				"ddbccd6c-0968-b334-3aee-9791d6846e6a"
			],
			"owner": "211018",
			"collectionId": "6b4ea652-00c1-46b0-7fd5-3ef801bbf1ad"
		},
		{
			"id": "c132de1f-2078-00ac-5ad7-d291394b5a28",
			"name": "Lora Agent Api",
			"description": "",
			"order": [
				"76e33101-7523-f485-8f5f-d8174b534b1d",
				"492f60dc-daaa-8bb1-a836-31a2cde39731",
				"a347c6c6-b9ff-dc41-9d19-9356fe2c6770"
			],
			"owner": "211018",
			"collectionId": "2559653c-f20e-f1dd-9d8d-832043188863"
		},
		{
			"id": "bcf3bb37-af9d-96f7-9872-d6846ea8b734",
			"name": "MQTT Tutorial ",
			"description": "This section shows how to use the MQTT protocol.",
			"order": [
				"f79ec41b-e9b9-3971-d4db-67e709d17a64",
				"95b22814-d9c7-0888-165a-3905e44cf057",
				"580d800b-1ef3-e1a4-d4fb-63edf86eeec1",
				"3e4e1c72-7620-8993-6fa9-5677cfda0375",
				"a890ec40-31df-a8d1-bd86-4205f04a8df5",
				"6c3ea4a6-411b-88e6-c8bd-14df290cf0e6",
				"a886118f-d3cf-a1c6-e159-56bfbe11692b",
				"b3751b39-79dd-d273-00f0-410694d689d7"
			],
			"owner": "211018",
			"collectionId": "6e42a4aa-5b61-f6fb-dafd-8aa8c06f2fd7"
		},
		{
			"id": "0ec982c5-12b7-389c-002e-b757916ec3b4",
			"name": "UL20 Tutorial",
			"description": "This section shows how to use the UL20 protocol.",
			"order": [
				"a96320a8-26ca-efc8-c29b-429175d8c520",
				"6eb4f2a6-c5c8-eeb1-2c77-e6cd46519c4d",
				"17949b88-0aec-6432-bc7d-4746f7eff64d",
				"aa7c3ee8-a697-f030-8274-07ec134c14d6",
				"3f61e8bc-7a37-cda9-b63d-34ca1cefd738",
				"7d432a85-c59c-9cba-6a49-cc7ce285eb67",
				"4e49ca94-9921-09e9-223f-f3cc9313a73c"
			],
			"owner": "211018",
			"collectionId": "6e42a4aa-5b61-f6fb-dafd-8aa8c06f2fd7"
		}
	],
	"timestamp": 1448290001482,
	"owner": "211018",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "17949b88-0aec-6432-bc7d-4746f7eff64d",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities/myEdison",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1448355532912,
			"name": "Step 2  - Access data from Orion",
			"description": "The lastest values associated to a device can be retrieved from Orion by using the **NGSI** protocol.\n\nHere is an explanation of the request path:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities` gives access to all data of a Context Entity.\n- `/myEdison` ID of the Context Entity associated to the edison device.\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": null,
			"descriptionFormat": null,
			"folder": "0ec982c5-12b7-389c-002e-b757916ec3b4"
		},
		{
			"id": "26c45d27-bb6c-2a08-7300-7590038374a2",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/sth/type/room/id/room1/attributes/temperature?lastN=10",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449062765820,
			"name": "Historical API - Get Room1 Temperature aggregated",
			"description": "give the last 10 temperatures of Room1",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "6e51b9d0-d5b9-9e9c-09d4-5cbbfd0ea986"
		},
		{
			"id": "274ba7fd-6785-075d-b471-7094093c7ec1",
			"headers": "Accept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextSubscriptions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449651654346,
			"name": "CEP API - Add subscription Room1 ",
			"description": "To allow Cepheus CEP to collect data on a device, you must add \na subscription from CEP to Orion.\n\nThis is done using a **NGSI** `subscribeContext` request.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "4b32166b-f8aa-5b36-399d-c88e10dde423",
			"rawModeData": "{\n  \"entities\": [\n    {\n      \"id\": \"Room1\",\n      \"type\": \"Room\",\n      \"isPattern\": \"false\"\n    }\n  ],\n  \"reference\": \"http://{{HOST}}/cep/notify\",\n  \"duration\": \"P1D\",\n  \"notifyConditions\": [\n    {\n      \"type\": \"ONCHANGE\",\n      \"condValues\": [\n        \"temperature\"\n      ]\n    }\n  ],\n  \"throttling\": \"PT5S\"\n}"
		},
		{
			"id": "2d549804-7630-1272-3980-ba1335fb070b",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1/attributes/pressure",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449580909346,
			"name": "Data API  - Delete a single attribute",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "2fbeacb2-ed9e-7d66-0733-2c6a13875a3a",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448644055247,
			"name": "Data API - Get entity",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "3e4e1c72-7620-8993-6fa9-5677cfda0375",
			"headers": "Content-Type: application/json\nAccept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities/type/edison-mqtt/id/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449589599483,
			"name": "Step 3  - Send command ON from Orion",
			"description": "To send a command `SET` to a device, you need to simply update the attribute `SET` to  value `on`\nof the entity associated to the device `myEdison-mqtt` on the\nOrion Context Broker.\n\nThe request must be of type `PUT` and contain a body (JSON or XML)\nformatted as defined by the **NGSI** protocol.\n\nAs previously, the path is:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities/myEdison-mqtt` point to the device\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n- `Content-Type: application/json`: format of the request\n\nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n    \"attributes\": [\n        {\n            \"name\": \"SET\",\n            \"type\": \"command\",\n            \"value\": \"on\"\n        }\n    ]\n}\n",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "3f61e8bc-7a37-cda9-b63d-34ca1cefd738",
			"headers": "Content-Type: application/json\nAccept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/type/edison/id/myEdison",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449652687322,
			"name": "Step 3  - Send command OFF",
			"description": "To send a command `SET` to a device, update the attribute `SET`\nto  value `off` of the Context Entity associated to the device\n`myEdison` on the Orion Context Broker.\n\nThe request must be of type `PUT` and contain a body (JSON or XML)\nformatted as defined by the **NGSI** protocol.\n\nAs previously, the path is:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities/type/edison/id/myEdison` points to the myEdison Context Entity.\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n- `Content-Type: application/json`: format of the request\n\nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"attributes\": [\n    {\n      \"name\": \"SET\",\n      \"type\": \"command\",\n      \"value\": \"off\"\n    }\n  ]\n}",
			"folder": "0ec982c5-12b7-389c-002e-b757916ec3b4"
		},
		{
			"id": "3f78386f-ab28-8ab6-8d4a-17f57025547d",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/sth/type/room/id/room1/attributes/temperature?lastN=10",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449062765820,
			"name": "Historical API - Get Tracker Temperature aggregated",
			"description": "give the last 10 temperatures of Tracker",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "6e51b9d0-d5b9-9e9c-09d4-5cbbfd0ea986"
		},
		{
			"id": "492f60dc-daaa-8bb1-a836-31a2cde39731",
			"headers": "Content-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nAccept: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/type/tracker/id/{{LORA1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449673951309,
			"name": "Lora Agent - Access to tracker's data",
			"description": "The LoRa Agent will automaticaly publish on the Orion Context Broker\ndata sent by the tracker.\n\nEach tracker will have a corresponding Context Entity with:\n\n * entity type set to `tracker`\n * entity id set to the tracker internal ID\n * `battery`, `position`, `mode` and `tracking`.\n\nSee [LoRa Agent documentation](http://emtech-hackathon.readthedocs.org/en/latest/loraagent_api/index.html) for more details.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"responses": [],
			"folder": "c132de1f-2078-00ac-5ad7-d291394b5a28"
		},
		{
			"id": "4a6e3a44-b5b2-ce83-c046-fae45addbdfc",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextSubscriptions/{{SUBSCRIPTION_ID}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448645289696,
			"name": "Data API - Delete subscription",
			"description": "To remove **NGSI** `subscribeContext` request.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "4dc99761-a714-6c3d-5e2d-e31d9e5efedf",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\nContent-Type: application/json\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1/attributes/pressure",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449580854998,
			"name": "Data API  - Update a single attribute",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n    \"value\" : \"763\"\n}",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "4e30fabf-0d94-9294-7754-666b64cec0b1",
			"headers": "Accept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextSubscriptions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449143592916,
			"name": "Historical API - Add subscription Lora Tracker",
			"description": "To allow Comet STH (Short Term Historic) to gather historic data\non a device, you must add a subscription from STH to Orion.\n\nThis is done using a **NGSI** `subscribeContext` request.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"entities\": [\n    {\n      \"id\": \"20635F0012000011\",\n      \"type\": \"tracker\",\n      \"isPattern\": \"false\"\n    }\n  ],\n  \"reference\": \"http://hackathon.villatolosa.com/sth/notify\",\n  \"duration\": \"P1D\",\n  \"notifyConditions\": [\n    {\n      \"type\": \"ONCHANGE\",\n      \"condValues\": [\n        \"temperature\"\n      ]\n    }\n  ],\n  \"throttling\": \"PT5S\"\n}",
			"folder": "6e51b9d0-d5b9-9e9c-09d4-5cbbfd0ea986"
		},
		{
			"id": "4e49ca94-9921-09e9-223f-f3cc9313a73c",
			"headers": "",
			"url": "http://{{HOST}}/ul/iot/d?i=myEdison&k={{TOKEN}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449679703635,
			"name": "Step 5 - ACK command",
			"description": "Upon receptions of a command, devices must notify back that\nthe device could (or not) execute the command.\n\nThis is done by sending back a `POST` request with a **UL20** payload\ncontaining:\n\n- a key composed of the device ID, the `@` character and the command\n- a value corresponding to the status : `OK`\n \nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "myEdison@ledr|OK"
		},
		{
			"id": "580d800b-1ef3-e1a4-d4fb-63edf86eeec1",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449652712434,
			"name": "Step 2  - Access data from Orion",
			"description": "The lastest values associated to a device can be retrieved from Orion by using the **NGSI** protocol.\n\nHere is an explanation of the request path:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities` gives access to all data of a Context Entity.\n- `/myEdison-mqtt` ID of the Context Entity associated to the edison device.\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "5a70afbc-03a9-f8f7-8523-0b8849110e7a",
			"headers": "Accept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextSubscriptions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1449052818452,
			"name": "Data API - Add subscription",
			"description": "To allow other FIWARE compontents to interact with entities, like Comet STH (Short Term Historic) to gather historic data, you can add a subscription from STH to Orion.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3",
			"rawModeData": "{\n  \"entities\": [\n    {\n      \"id\": \"Room1\",\n      \"type\": \"Room\",\n      \"isPattern\": \"false\"\n    }\n  ],\n  \"reference\": \"http://hackathon.villatolosa.com/sth/notify\",\n  \"duration\": \"P1D\",\n  \"notifyConditions\": [\n    {\n      \"type\": \"ONCHANGE\",\n      \"condValues\": [\n        \"temperature\"\n      ]\n    }\n  ],\n  \"throttling\": \"PT5S\"\n}"
		},
		{
			"id": "6a931d40-2ed2-9248-97d1-8a0cc2ec6f62",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Fence1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449679389372,
			"name": "Data API - Get entity Fence1",
			"description": "Fence1 of Alert type is a new entity created by the statement of CEP.\n\nFence1 is an alert triggered  when the tracker enters the area \nor when the tracker exits the area.\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "4b32166b-f8aa-5b36-399d-c88e10dde423"
		},
		{
			"id": "6c3ea4a6-411b-88e6-c8bd-14df290cf0e6",
			"headers": "",
			"url": "",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449225912869,
			"name": "Step 4 - Subscribe to command from device",
			"description": "For subscribing to topics with the MQTT protocol you can use : mosquitto_sub\n\nThe exemple below subscribe to the SET topic (for turn on/off the led)\n\nmosquitto_sub -h \"hackathon.villatolosa.com\" -t \"TOKEN/myEdison-mqtt/cmd/SET\" -u \"TOKEN\"\n \n- parameter `h`: Specify the host to connect to. Defaults to localhost.\n- parameter `t`: The MQTT topic to subscribe to\n- parameter `u`: Provide a username to be used for authenticating with the broker.\n\nFor more information, please read [Moquitto man](http://mosquitto.org/man/mosquitto_sub-1.html)\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "6eb4f2a6-c5c8-eeb1-2c77-e6cd46519c4d",
			"headers": "",
			"url": "http://{{HOST}}/ul/iot/d?i=myEdison&k={{TOKEN}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448382594576,
			"name": "Step 1 - Send data from device",
			"description": "This request simulates a device sending data to Fiware to the UL Agent\nusing the **UL20** protocol (a compact HTTP based protocol exposed on port `:8080` the `/iot/d` path).\n\nUL Agent expects `/iot/d` requests with :\n\n - parameter `i`: the device ID, **mandatory**.\n - parameter `k`: an access token (same as you API key), **mandatory**.\n - parameter `t`: an ISO8601 timestamp (eg. `2015-07-04T09:10:55.137641Z`), optional.\n                  If no timestamp is provided, the current date of the server is used.\n - parameter `getCmd`: ask for pending commands, optional.\n\nUL20 body format follows this convention:\n\n - key are are separated from values using `|`\n - each key/value pairs are separated using `#`\n - if a value contains several values, use `/` as separator\n \nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md)\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "0ec982c5-12b7-389c-002e-b757916ec3b4",
			"rawModeData": "l|44.2#p|1"
		},
		{
			"id": "721e7f2a-3f71-4b8a-42c0-4348ab4dbb98",
			"headers": "Accept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448643828415,
			"name": "Data API - Add a new Entity",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"id\": \"Room1\",\n  \"type\": \"Room\",\n  \"attributes\" : [\n    {\n      \"name\" : \"temperature\",\n      \"type\" : \"float\",\n      \"value\" : \"23\"\n    },\n    {\n      \"name\" : \"pressure\",\n      \"type\" : \"integer\",\n      \"value\" : \"720\"\n    }\n  ]\n}",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "76e33101-7523-f485-8f5f-d8174b534b1d",
			"headers": "Content-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nAccept: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/type/tracker/id/{{LORA1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449674333194,
			"name": "Lora Agent - Simulate a tracker",
			"description": "To simulate the data send by the Lora Agent to Orion Context Broker, you can send this request.\n\nYou just must modify the Id with you tracker id.\n\nSee [LoRa Agent documentation](http://emtech-hackathon.readthedocs.org/en/latest/loraagent_api/index.html) for more details.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"responses": [],
			"rawModeData": "{\n  \"attributes\": [\n    {\n      \"name\": \"temperature\",\n      \"type\": \"double\",\n      \"value\": \"25.5\"\n    },\n    {\n      \"name\": \"mode\",\n      \"type\": \"string\",\n      \"value\": \"POSITION\"\n    },\n    {\n      \"name\": \"tracking\",\n      \"type\": \"string\",\n      \"value\": \"SLOWTRACK\"\n    },\n    {\n      \"name\": \"battery\",\n      \"type\": \"long\",\n      \"value\": \"0.75\"\n    },\n    {\n      \"name\": \"position\",\n      \"type\": \"coords\",\n      \"value\": \"45.5, -10.5\",\n      \"metadatas\": [\n        {\n          \"name\": \"location\",\n          \"type\": \"string\",\n          \"value\": \"WGS84\"\n        }\n      ]\n    }\n  ]\n}",
			"folder": "c132de1f-2078-00ac-5ad7-d291394b5a28"
		},
		{
			"id": "7a4e1a88-b816-24c0-7d25-ee02f349c0d8",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448644094142,
			"name": "Data API - Get all entities",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "7d432a85-c59c-9cba-6a49-cc7ce285eb67",
			"headers": "",
			"url": "http://{{HOST}}/ul/iot/d?i=myEdison&k={{TOKEN}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449679722353,
			"name": "Step 4 - Poll command",
			"description": "When using the **UL** protocol, a device must frequently\npoll the UL Agent to check for commands to execute.\n\nThe device can either:\n\n * send data (see Step 1) and add the `cmdGet` parameter\n * get the commands by making a `GET` request.\n\n**Note:** you must be quick to call this request just after the Step 3,\nif not the UL Agent will report to Orion Context Broker that\nthe command could not be delivered.\n\nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5"
		},
		{
			"id": "8e93b5ed-210f-807f-f9aa-e665e2152268",
			"headers": "Accept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextSubscriptions",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449679014459,
			"name": "CEP API - Add subscription Trackers",
			"description": "To allow Cepheus CEP to collect data on a device, you must add \na subscription from CEP to Orion.\n\nThis is done using a **NGSI** `subscribeContext` request.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"entities\": [\n    {\n      \"id\": \".*\",\n      \"type\": \"tracker\",\n      \"isPattern\": \"true\"\n    }\n  ],\n  \"reference\": \"http://{{HOST}}/cep/notify\",\n  \"duration\": \"P1D\",\n  \"notifyConditions\": [\n    {\n      \"type\": \"ONCHANGE\",\n      \"condValues\": [\n        \"position\"\n      ]\n    }\n  ],\n  \"throttling\": \"PT5S\"\n}",
			"folder": "4b32166b-f8aa-5b36-399d-c88e10dde423"
		},
		{
			"id": "942ba2b5-9089-bda1-a8f1-b1b921f89975",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\nContent-Type: application/json\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448644855572,
			"name": "Data API  - Update attributes",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"attributes\" : [\n    {\n      \"name\" : \"temperature\",\n      \"type\" : \"float\",\n      \"value\" : \"26.5\"\n    },\n    {\n      \"name\" : \"pressure\",\n      \"type\" : \"integer\",\n      \"value\" : \"763\"\n    }\n  ]\n}",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "95b22814-d9c7-0888-165a-3905e44cf057",
			"headers": "",
			"url": "",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449575961863,
			"name": "Step 1 - Send data from device",
			"description": "For publishing simple messages with the MQTT protocol you can use : mosquitto_pub\n\nThe exemple below publish the lum value 123 to his topic. \n\nmosquitto_pub -h \"hackathon.villatolosa.com\" -t \"TOKEN/myEdison-mqtt/lux\" -m \"123\" -u \"TOKEN\"\n \n- parameter `h`: Specify the host to connect to. Defaults to localhost.\n- parameter `t`: The MQTT topic on which to publish the message.\n- parameter `m`: Send a single message from the command line.\n- parameter `u`: Provide a username to be used for authenticating with the broker.\n\nFor more information, please read [Moquitto man](http://mosquitto.org/man/mosquitto_pub-1.html)\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "9a90e11e-1969-df0d-6c93-1687b5e1b2e0",
			"headers": "X-Auth-Token: {{TOKEN}}\nAccept: application/json\nContent-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\n",
			"url": "http://{{HOST}}/cep/v1/admin/config",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449678737045,
			"name": "CEP API - Add configuration",
			"description": "To allow to configure the entities and the statements of the CEP.\nThe configuration a simple JSON object containing the complete \ndescription of the behavior of the CEP engine \n(a set of EPL statements) and the mapping between the NGSI Context\nEntities and CEP Events.\n\nIn this example, we configure :\n\n- an incoming event *Room1*\n- an outgoing event *Floor1* with the url of the broker for the notification\n- a statement : computes the average of floor's rooms\n    ",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"responses": [],
			"rawModeData": "{\n  \"host\":\"http://{{HOST}}/cep\",\n  \"in\":[\n    {\n      \"id\":\"Room.*\",\n      \"type\":\"Room\",\n      \"isPattern\": true,\n      \"attributes\":[\n        { \"name\":\"temperature\", \"type\":\"double\" },\n        { \"name\":\"floor\", \"type\":\"string\" }\n      ]\n    },\n    {\n        \"id\":\".*\",\n        \"type\":\"tracker\",\n        \"attributes\":[\n           { \"name\":\"time\", \"type\":\"date\" },\n           { \"name\":\"position\", \"type\":\"geo:point\" }\n        ]\n    }\n  ],\n  \"out\":[\n    {\n      \"id\":\"Floor1\",\n      \"type\":\"Floor\",\n      \"attributes\":[\n        { \"name\":\"temperature\", \"type\":\"double\" }\n      ],\n      \"brokers\": [\n        { \"url\":\"http://{{HOST}}/cb\",\n          \"serviceName\": \"{{Fiware-Service}}\",\n          \"servicePath\": \"{{Fiware-ServicePath}}\",\n          \"authToken\": \"{{TOKEN}}\"\n        }\n      ]\n    },\n    {\n        \"id\":\"Fence1\",\n        \"type\":\"Alert\",\n        \"attributes\":[\n            { \"name\":\"time\", \"type\":\"date\" },\n            { \"name\":\"position\", \"type\":\"geo:point\" },\n            { \"name\":\"inside\", \"type\":\"boolean\" }\n        ],\n      \"brokers\": [\n        { \"url\":\"http://{{HOST}}/cb\",\n          \"serviceName\": \"{{Fiware-Service}}\",\n          \"servicePath\": \"{{Fiware-ServicePath}}\",\n          \"authToken\": \"{{TOKEN}}\"\n        }\n      ]\n    }\n  ],\n  \"statements\":[\n    \"INSERT INTO Floor SELECT floor as id, avg(temperature) as temperature FROM Room.win:time(10 min) GROUP BY floor OUTPUT LAST EVERY 10 sec\",\n    \"CREATE VARIABLE Geometry fence = polygon({point(43.59432, 1.44934), point(43.59508, 1.45156), point(43.5949, 1.45191), point(43.59352, 1.45014), point(43.59432, 1.44934)})\",\n    \"CREATE WINDOW TrackerState.std:unique(id) as Alert\",\n    \"INSERT INTO TrackerInside SELECT *, fence.contains(position) as inside FROM tracker\",\n    \"INSERT INTO FenceCross SELECT a.* FROM pattern [ every a=TrackerInside -> (timer:interval(4 sec) and not TrackerInside(id=a.id, inside!=a.inside)) ]\",\n    \"ON FenceCross fc MERGE TrackerState ts WHERE fc.id = ts.id WHEN NOT MATCHED THEN INSERT SELECT id, time, position, inside WHEN MATCHED AND fc.inside != ts.inside THEN UPDATE SET inside = fc.inside\",\n    \"INSERT INTO Alert SELECT * FROM TrackerState\"\n  ]\n}",
			"folder": "4b32166b-f8aa-5b36-399d-c88e10dde423"
		},
		{
			"id": "a146b1c3-e028-7217-8d8d-7ff939ef61e7",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Floor1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449651828486,
			"name": "Data API - Get entity Floor1",
			"description": "Floor1 is a nex entity created by the statement of CEP.\n\n`\"INSERT INTO Floor SELECT floor as id, avg(temperature) as temperature FROM Room.win:time(10 min) GROUP BY floor OUTPUT LAST EVERY 10 sec\"`\n\nFloor1 is an average of room1's temperatures during 10 minutes.",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "4b32166b-f8aa-5b36-399d-c88e10dde423"
		},
		{
			"id": "a347c6c6-b9ff-dc41-9d19-9356fe2c6770",
			"headers": "Content-Type: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nAccept: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/type/tracker/id/{{LORA1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449673977810,
			"name": "Lora Agent -  Change tracking mode",
			"description": "Depending on the tracking mode, the tracker consumes more or less battery.\nIt can be interesting to change the tracking mode.\n\nFor this, you need to send a request to the Orion Context Broker to change the mode.\n\nTo send a tracking command to a LoRa device, simply update the attribute `SET_tracking` of \nthe Context Entity associated to the device `{{tracker_id}}` on the\nOrion Context Broker.\n\nThe value can be either:\n\n* `SLEEP`: no tracking\n* `SLOWTRACK`: the tracker send 1 position request every one hour\n* `FASTTRACK`: the tracker send 1 position request every 10 min\n* `MOTIONTRACK`: motion tracking\n\nThe request must be of type `PUT` and contain a body (JSON or XML)\nformatted as defined by the **NGSI** protocol.\n\nAs previously, the path is:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities/type/tracker/id/{{tracker_id}}` point to the ID of the tracker\n\nSee [LoRa Agent documentation](http://emtech-hackathon.readthedocs.org/en/latest/loraagent_api/index.html) for more details.\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"responses": [],
			"rawModeData": "{\n  \"attributes\": [\n    {\n      \"name\": \"SET_tracking\",\n      \"type\": \"string\",\n      \"value\": \"FASTTRACK\"\n    }\n  ]\n}",
			"folder": "c132de1f-2078-00ac-5ad7-d291394b5a28"
		},
		{
			"id": "a64b0f0c-ece8-3fd3-5fd7-09f145ec9624",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nContent-Type: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449586457234,
			"name": "Device API - Register a device",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"devices\": [\n    {\n      \"device_id\": \"myEdison-mqtt\",\n      \"entity_name\": \"myEdison-mqtt\",\n      \"entity_type\": \"edison-mqtt\",\n      \"protocol\": \"PDI-IoTA-MQTT-UltraLight\",\n      \"attributes\": [\n        {\n          \"object_id\": \"l\",\n          \"name\": \"lux\",\n          \"type\": \"string\"\n        },\n        {\n          \"object_id\": \"p\",\n          \"name\": \"button\",\n          \"type\": \"string\"\n        }\n      ],\n      \"commands\": [\n        {\n          \"name\": \"SET\",\n          \"type\": \"command\",\n          \"value\": \"myEdison-mqtt@ledr|%s\"\n        }\n      ]\n    }\n  ]\n}\n",
			"folder": "a18a2e5c-3ff9-9fbf-efab-e96c1657a39a"
		},
		{
			"id": "a886118f-d3cf-a1c6-e159-56bfbe11692b",
			"headers": "",
			"url": "",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449575651457,
			"name": "Step 5 - Send ACK command from device",
			"description": "Upon receptions of a command, devices must notify back that\nthe device could (or not) execute the command.\n\nThis is done by publishing a message to the ack topic.\nWith the MQTT protocol you can use : mosquitto_pub\n\ntopic : <api-key>/<device-id>/cmdexe/<cmd-name>\n\npayload : cmdid|<cmdid-value>#result|<result-value>\n\n\nExemple : \n\nFirst, admit that we received a message after subscirbing to the SET topic :\n\ncmdid|8d0e68ca-4d69-415a-9b34-f7acb31723f1#myEdison-mqtt@SET|on\n\nmosquitto_pub -h \"hackathon.villatolosa.com\" -t \"TOKEN/myEdison-mqtt/cmdexe/SET\" -m \"cmdid|8d0e68ca-4d69-415a-9b34-f7acb31723f1#result|on\" -u \"TOKEN\"\n \n- parameter `h`: Specify the host to connect to. Defaults to localhost.\n- parameter `t`: The MQTT topic on which to publish the message.\n- parameter `m`: Send a single message from the command line.\n- parameter `u`: Provide a username to be used for authenticating with the broker.\n\nFor more information, please read [Moquitto man](http://mosquitto.org/man/mosquitto_pub-1.html)\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "a890ec40-31df-a8d1-bd86-4205f04a8df5",
			"headers": "Content-Type: application/json\nAccept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities/type/edison-mqtt/id/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449589595439,
			"name": "Step 3  - Send command OFF from Orion",
			"description": "To send a command `SET` to a device, you need to simply update the attribute `SET` to  value `off`\nof the entity associated to the device `myEdison-mqtt` on the\nOrion Context Broker.\n\nThe request must be of type `PUT` and contain a body (JSON or XML)\nformatted as defined by the **NGSI** protocol.\n\nAs previously, the path is:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities/myEdison-mqtt` point to the device\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n- `Content-Type: application/json`: format of the request\n\nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n    \"attributes\": [\n        {\n            \"name\": \"SET\",\n            \"type\": \"command\",\n            \"value\": \"off\"\n        }\n    ]\n}\n",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "a96320a8-26ca-efc8-c29b-429175d8c520",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nContent-Type: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449576054708,
			"name": "Step 0 - Register a UL20 device",
			"description": "First a device must be registered to the IoT Agent (provisioning).\n\nThe IoT Agent supports multiples IoT protocols (MQTT, UL20, CoAP, Sigfox, Lora, etc...).\n\nEach device must be associated to a protocol and a `device_id` and mapped to an NGSI Entity (defined by an `entity_name` and `entity_type`) with their associated attributes and commands.\n\n* Attributes are used by the devices sensors to send data to the cloud.\n* Commands are used to control the devices from the cloud.\n\nSupported protocols:\n\n* `PDI-IoTA-UltraLight`: the UL20 protocol\n* `PDI-IoTA-MQTT-UltraLight`: the MQTT protocol\n\nThe request should return a `201 Created` HTTP response code on a successful operation.\n\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"devices\": [\n    {\n      \"device_id\": \"myEdison\",\n      \"entity_name\": \"myEdison\",\n      \"entity_type\": \"edison\",\n      \"protocol\": \"PDI-IoTA-UltraLight\",\n      \"attributes\": [\n        {\n          \"object_id\": \"l\",\n          \"name\": \"lux\",\n          \"type\": \"string\"\n        },\n        {\n          \"object_id\": \"p\",\n          \"name\": \"button\",\n          \"type\": \"string\"\n        }\n      ],\n      \"commands\": [\n        {\n          \"name\": \"SET\",\n          \"type\": \"command\",\n          \"value\": \"myEdison@ledr|%s\"\n        }\n      ]\n    }\n  ]\n}\n",
			"folder": "0ec982c5-12b7-389c-002e-b757916ec3b4"
		},
		{
			"id": "aa7c3ee8-a697-f030-8274-07ec134c14d6",
			"headers": "Content-Type: application/json\nAccept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/type/edison/id/myEdison",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449589591097,
			"name": "Step 3  - Send command ON",
			"description": "To send a command `SET` to a device, update the attribute `SET`\nto  value `on` of the Context Entity associated to the device\n`myEdison` on the Orion Context Broker.\n\nThe request must be of type `PUT` and contain a body (JSON or XML)\nformatted as defined by the **NGSI** protocol.\n\nAs previously, the path is:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities/type/edison/id/myEdison` points to the myEdison Context Entity.\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n- `Content-Type: application/json`: format of the request\n\nFor more information, please read [UL20 protocol](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/UL20_protocol.md) and [commands](https://github.com/telefonicaid/fiware-IoTAgent-Cplusplus/blob/develop/doc/commands.md).\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"attributes\": [\n    {\n      \"name\": \"SET\",\n      \"type\": \"command\",\n      \"value\": \"on\"\n    }\n  ]\n}",
			"folder": "0ec982c5-12b7-389c-002e-b757916ec3b4"
		},
		{
			"id": "b3751b39-79dd-d273-00f0-410694d689d7",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/cb/v1/contextEntities/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449575945561,
			"name": "Step 6  - Get command status from Orion",
			"description": "The lastest command status can be retrieved from Orion by using the **NGSI** protocol.\n\nHere is an explanation of the request path:\n\n- `/cb` path points to the Orion Context Broker (CB).\n- `/v1` refers to the first version of the NGSI protocol used by Orion CB.\n- `/contextEntities` gives access to all data of a Context Entity.\n- `/myEdison-mqtt` ID of the Context Entity associated to the edison device.\n- `/attributes/SET_status` access the `SET_status` attribute to get the status of the `SET` command.\n\nAccess to Orion CB requires several HTTP headers:\n\n- `Fiware-Service: smartcity`: used for tenant isolation\n- `Fiware-ServicePath: /teamX`: used to isolate multiples devices/services sharing the same IDs.\n- `X-Auth-Token: XXXXXXX`: authorization token\n- `Accept: application/json`: format for the response\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		},
		{
			"id": "ba9230e1-ba02-864e-3cb0-589351dc6ce6",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448643454428,
			"name": "Device API - Get all Devices",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "a18a2e5c-3ff9-9fbf-efab-e96c1657a39a"
		},
		{
			"id": "c5594033-be35-4a6f-8a06-070e01fd0aa7",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449583391653,
			"name": "Device API - Get device detail",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "a18a2e5c-3ff9-9fbf-efab-e96c1657a39a"
		},
		{
			"id": "d205d75b-a4e1-99ed-1f32-3dd5d81b4e9c",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices/myEdison-mqtt",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449581403589,
			"name": "Device API - Delete device",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "a18a2e5c-3ff9-9fbf-efab-e96c1657a39a"
		},
		{
			"id": "ddbccd6c-0968-b334-3aee-9791d6846e6a",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/sth/type/room/id/room1/attributes/temperature?aggrMethod=max&aggrPeriod=month",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449149206818,
			"name": "Historical API - Get Room1 Temperature Max",
			"description": "give the max of the last 10 temperatures of Room1",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "6e51b9d0-d5b9-9e9c-09d4-5cbbfd0ea986"
		},
		{
			"id": "f17dfc64-0d67-31b2-0a2c-749492645f0a",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1/attributes/pressure",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448644029408,
			"name": "Data API - Get a single attribute",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "f1abbb25-ca62-f598-4efd-6247ba3dcf3f",
			"headers": "Accept: application/json\nFiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nX-Auth-Token: {{TOKEN}}\n",
			"url": " http://{{HOST}}/cb/v1/contextEntities/Room1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1448644811063,
			"name": "Data API  - Delete entity",
			"description": "",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "",
			"folder": "9dad4d19-221f-3888-83d3-663719e620f3"
		},
		{
			"id": "f79ec41b-e9b9-3971-d4db-67e709d17a64",
			"headers": "Fiware-Service: {{Fiware-Service}}\nFiware-ServicePath: {{Fiware-ServicePath}}\nContent-Type: application/json\nX-Auth-Token: {{TOKEN}}\n",
			"url": "http://{{HOST}}/ul/iot/devices",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1449574940818,
			"name": "Step 0 - Register a MQTTdevice",
			"description": "First a device must be registered to the IoT Agent (provisioning).\n\nThe IoT Agent supports multiples IoT protocols (MQTT, UL20, CoAP, Sigfox, Lora, etc...).\n\nEach device must be associated to a protocol and a `device_id` and mapped to an NGSI Entity (defined by an `entity_name` and `entity_type`) with their associated attributes and commands.\n\n* Attributes are used by the devices sensors to send data to the cloud.\n* Commands are used to control the devices from the cloud.\n\nSupported protocols:\n\n* `PDI-IoTA-UltraLight`: the UL20 protocol\n* `PDI-IoTA-MQTT-UltraLight`: the MQTT protocol\n\nThe request should return a `201 Created` HTTP response code on a successful operation.\n\n",
			"collectionId": "a98f0a97-0588-935a-ee31-e7970e6926d5",
			"rawModeData": "{\n  \"devices\": [\n    {\n      \"device_id\": \"myEdison-mqtt\",\n      \"entity_name\": \"myEdison-mqtt\",\n      \"entity_type\": \"edison-mqtt\",\n      \"protocol\": \"PDI-IoTA-MQTT-UltraLight\",\n      \"attributes\": [\n        {\n          \"object_id\": \"l\",\n          \"name\": \"lux\",\n          \"type\": \"string\"\n        },\n        {\n          \"object_id\": \"p\",\n          \"name\": \"button\",\n          \"type\": \"string\"\n        }\n      ],\n      \"commands\": [\n        {\n          \"name\": \"SET\",\n          \"type\": \"command\",\n          \"value\": \"myEdison-mqtt@ledr|%s\"\n        }\n      ]\n    }\n  ]\n}\n",
			"folder": "bcf3bb37-af9d-96f7-9872-d6846ea8b734"
		}
	]
}